---
import Image from "astro/components/Image.astro";
import Layout from "./Layout.astro";

interface Props {
  title: string;
  description: string;
  pubDate: Date;
  role: string;
  tags: Array<string>;
  image: {
    src: string;
    alt: string;
  };
}

const { title, description, pubDate, role, tags, image } = Astro.props;
---

<Layout
  bg="black"
  nav_pos="right"
  title=""
  description=""
  category=""
  keywords=""
>
  <main class="bg-night text-white_smoke">
    <section class="h-[100vh] flex flex-row">
      <div class="w-1/2 flex flex-col px-16 justify-center gap-3">
        <span class="uppercase text-coquelicot font-semibold"
          >{tags.join("    |   ")}</span
        >
        <span class="text-3xl font-bold"
          >{pubDate.getDay()}.{pubDate.getMonth()}.{pubDate.getFullYear()}</span
        >
        <h1 class="font-extenda_headings text-6xl lg:line-clamp-4 uppercase">
          {title}
        </h1>
        <span class="opacity-90">{role}</span>
        <p class="opacity-70">
          {description}
        </p>
      </div>
      <div
        class="w-1/2 h-full saturate-0 hover:saturate-100 transition-all duration-1000"
      >
        <img
          class="w-full h-full object-cover"
          src={image.src}
          alt={image.alt}
          decoding="async"
          loading="lazy"
        />
      </div>
    </section>
    <section class="px-12 pt-5 pb-7">
      <article class="w-1/2 article">
        <slot />
      </article>
    </section>
  </main>
</Layout>
<script>
  import gsap from "gsap";
  import { CustomEase, ScrollTrigger } from "gsap/all";
  import SplitType from "split-type";
  import type { TargetElement } from "split-type";
  import { Ease as customEase } from "../animations/ease";
  gsap.registerPlugin(ScrollTrigger, CustomEase);
  document.querySelectorAll(".article").forEach((e) => {
    e.querySelectorAll("h1, h2, h3, h4").forEach((heading) => {
      anim(heading);
    });

    function split(element: TargetElement) {
      const chars = new SplitType(element, { types: "words,chars" });
      return chars;
    }

    function anim(target: any) {
      let chars = split(target);
      let tl = gsap.timeline({
        scrollTrigger: {
          trigger: target,
          start: "bottom bottom",
          end: "bottom center",
          scrub: 1,
        },
      });
      tl.from(chars.words, {
        yPercent: 120,
        stagger: 0.2,
        duration: 0.2,
        ease: customEase,
      });
    }
  });
</script>
<style>
  article {
    h1 {
      font-size: 3rem;
      font-weight: 600;
      line-height: 1.5;
      margin-top: 2rem;
      padding-bottom: 0.1rem;
      overflow: clip;
    }
    h2 {
      font-size: 2.75rem;
      line-height: 1.5;
      margin-top: 2rem;
      padding-bottom: 0.1rem;
      overflow: clip;
    }
    h3 {
      font-size: 2.5rem;
      line-height: 1.25;
      margin-top: 2rem;
      padding-bottom: 0.1rem;
      overflow: clip;
    }

    p {
      padding-bottom: 1rem;
    }
  }
</style>
